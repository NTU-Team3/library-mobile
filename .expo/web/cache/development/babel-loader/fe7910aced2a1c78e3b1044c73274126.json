{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from \"react\";\nimport SearchBar from \"../components/SearchBar\";\nimport Screen from \"./Screen\";\nimport data from \"../data/fakeData\";\nimport FullList from \"../components/FullList\";\nimport GridList from \"../components/GridList\";\nimport GridIcon from \"../components/GridIcon\";\nimport ListIcon from \"../components//ListIcon\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ReadingScreen = function ReadingScreen(navigation) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _React$useState = React.useState(\"GridIcon\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      gridView = _React$useState2[0],\n      setgridView = _React$useState2[1];\n\n  function updateSearch(value) {\n    console.log(\"abc\");\n  }\n\n  function updateView(string) {\n    setgridView(string);\n  }\n\n  return _jsxs(Screen, {\n    children: [_jsx(SearchBar, {\n      value: value,\n      updateSearch: updateSearch,\n      style: {}\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.searchbar,\n        children: [_jsx(TextInput, {\n          style: styles.searchInput,\n          placeholder: \"Read List\"\n        }), _jsx(GridIcon, {\n          funct: updateView\n        }), _jsx(ListIcon, {\n          funct: updateView\n        })]\n      })\n    }), gridView === \"GridIcon\" ? _jsx(GridList, {\n      data: data\n    }) : _jsx(FullList, {\n      data: data\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: 40,\n    backgroundColor: \"white\",\n    borderRadius: 8,\n    justifyContent: \"center\",\n    marginTop: 10\n  },\n  searchInput: {\n    width: \"80%\",\n    height: \"100%\",\n    fontSize: 25,\n    justifyContent: \"flex-start\"\n  },\n  searchbar: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    backgroundColor: \"#859a9b\",\n    borderRadius: 20,\n    padding: 10,\n    marginBottom: 20,\n    shadowColor: \"#303838\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowRadius: 10,\n    shadowOpacity: 0.35\n  }\n});\nexport default ReadingScreen;","map":{"version":3,"names":["React","useState","SearchBar","Screen","data","FullList","GridList","GridIcon","ListIcon","ReadingScreen","navigation","value","setValue","gridView","setgridView","updateSearch","console","log","updateView","string","styles","container","searchbar","searchInput","StyleSheet","create","width","height","backgroundColor","borderRadius","justifyContent","marginTop","fontSize","flexDirection","button","padding","marginBottom","shadowColor","shadowOffset","shadowRadius","shadowOpacity"],"sources":["C:/Users/royst/Desktop/saifu/New folder (2)/library-mobile/app/containers/Reading.js"],"sourcesContent":["import { StyleSheet, Text, View, Button, TextInput, Image } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport Screen from \"./Screen\";\r\nimport data from \"../data/fakeData\";\r\nimport FullList from \"../components/FullList\";\r\nimport GridList from \"../components/GridList\";\r\nimport GridIcon from \"../components/GridIcon\";\r\nimport ListIcon from \"../components//ListIcon\";\r\nimport { TouchableHighlight, TouchableOpacity } from \"react-native-web\";\r\n\r\nconst ReadingScreen = (navigation) => {\r\n  const [value, setValue] = useState();\r\n  const [gridView, setgridView] = React.useState(\"GridIcon\");\r\n\r\n  function updateSearch(value) {\r\n    console.log(\"abc\");\r\n  }\r\n  function updateView(string) {\r\n    setgridView(string);\r\n  }\r\n\r\n  return (\r\n    <Screen>\r\n      <SearchBar value={value} updateSearch={updateSearch} style={{}} />\r\n      <View style={styles.container}>\r\n        <View style={styles.searchbar}>\r\n          <TextInput style={styles.searchInput} placeholder=\"Read List\" />\r\n          <GridIcon funct={updateView} />\r\n          <ListIcon funct={updateView} />\r\n        </View>\r\n      </View>\r\n      {gridView === \"GridIcon\" ? (\r\n        <GridList data={data} />\r\n      ) : (\r\n        <FullList data={data} />\r\n      )}\r\n    </Screen>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: 40,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 8,\r\n    justifyContent: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  searchInput: {\r\n    width: \"80%\",\r\n    height: \"100%\",\r\n    fontSize: 25,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  searchbar: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#859a9b\",\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    marginBottom: 20,\r\n    shadowColor: \"#303838\",\r\n    shadowOffset: { width: 0, height: 5 },\r\n    shadowRadius: 10,\r\n    shadowOpacity: 0.35,\r\n  },\r\n});\r\n\r\nexport default ReadingScreen;\r\n"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;;;;;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAgB;EACpC,gBAA0BT,QAAQ,EAAlC;EAAA;EAAA,IAAOU,KAAP;EAAA,IAAcC,QAAd;;EACA,sBAAgCZ,KAAK,CAACC,QAAN,CAAe,UAAf,CAAhC;EAAA;EAAA,IAAOY,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,SAASC,YAAT,CAAsBJ,KAAtB,EAA6B;IAC3BK,OAAO,CAACC,GAAR,CAAY,KAAZ;EACD;;EACD,SAASC,UAAT,CAAoBC,MAApB,EAA4B;IAC1BL,WAAW,CAACK,MAAD,CAAX;EACD;;EAED,OACE,MAAC,MAAD;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAER,KAAlB;MAAyB,YAAY,EAAEI,YAAvC;MAAqD,KAAK,EAAE;IAA5D,EADF,EAEE,KAAC,IAAD;MAAM,KAAK,EAAEK,MAAM,CAACC,SAApB;MAAA,UACE,MAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,SAApB;QAAA,WACE,KAAC,SAAD;UAAW,KAAK,EAAEF,MAAM,CAACG,WAAzB;UAAsC,WAAW,EAAC;QAAlD,EADF,EAEE,KAAC,QAAD;UAAU,KAAK,EAAEL;QAAjB,EAFF,EAGE,KAAC,QAAD;UAAU,KAAK,EAAEA;QAAjB,EAHF;MAAA;IADF,EAFF,EASGL,QAAQ,KAAK,UAAb,GACC,KAAC,QAAD;MAAU,IAAI,EAAET;IAAhB,EADD,GAGC,KAAC,QAAD;MAAU,IAAI,EAAEA;IAAhB,EAZJ;EAAA,EADF;AAiBD,CA5BD;;AA8BA,IAAMgB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,KAAK,EAAE,MADE;IAETC,MAAM,EAAE,EAFC;IAGTC,eAAe,EAAE,OAHR;IAITC,YAAY,EAAE,CAJL;IAKTC,cAAc,EAAE,QALP;IAMTC,SAAS,EAAE;EANF,CADoB;EAS/BR,WAAW,EAAE;IACXG,KAAK,EAAE,KADI;IAEXC,MAAM,EAAE,MAFG;IAGXK,QAAQ,EAAE,EAHC;IAIXF,cAAc,EAAE;EAJL,CATkB;EAe/BR,SAAS,EAAE;IACTW,aAAa,EAAE,KADN;IAETH,cAAc,EAAE;EAFP,CAfoB;EAmB/BI,MAAM,EAAE;IACNN,eAAe,EAAE,SADX;IAENC,YAAY,EAAE,EAFR;IAGNM,OAAO,EAAE,EAHH;IAINC,YAAY,EAAE,EAJR;IAKNC,WAAW,EAAE,SALP;IAMNC,YAAY,EAAE;MAAEZ,KAAK,EAAE,CAAT;MAAYC,MAAM,EAAE;IAApB,CANR;IAONY,YAAY,EAAE,EAPR;IAQNC,aAAa,EAAE;EART;AAnBuB,CAAlB,CAAf;AA+BA,eAAe/B,aAAf"},"metadata":{},"sourceType":"module"}
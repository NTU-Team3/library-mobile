{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport _Button from \"../app/components/Button\";\nimport Background_Image from \"../assets/login_page/background.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Login_page = function Login_page() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return _jsx(_Fragment, {\n    children: _jsxs(ImageBackground, {\n      source: Background_Image,\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: [_jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.divider\n        }), _jsx(Text, {\n          style: styles.text,\n          onPress: function onPress() {\n            Linking.openURL(\"http://google.com\");\n          },\n          children: \"Register?\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter your email\",\n          value: email,\n          placeholderTextColor: \"white\",\n          onChangeText: setEmail\n        }), _jsx(TextInput, {\n          style: styles.input,\n          secureTextEntry: true,\n          value: password,\n          placeholder: \"Enter your password\",\n          placeholderTextColor: \"white\",\n          onChangeText: setPassword\n        }), _jsx(Text, {\n          children: email\n        }), _jsx(_Button, {\n          buttonText: \"sign in\",\n          func: function func() {\n            if (email === \"\") {\n              alert(\"email is empty\");\n            }\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.lower,\n        children: [_jsx(Text, {\n          style: styles.lower__text,\n          onPress: function onPress() {\n            Linking.openURL(\"http://google.com\");\n          },\n          children: \"Forgot password\"\n        }), _jsx(Text, {\n          style: styles.lower__text,\n          onPress: function onPress() {\n            alert(\"You tapped the button!\");\n          },\n          children: \"Continue as guest\"\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"flex-end\",\n    width: 255\n  },\n  image: {\n    alignItems: \"center\",\n    flex: 1\n  },\n  text: {\n    color: \"black\",\n    fontSize: 20,\n    lineHeight: 25\n  },\n  input: {\n    backgroundColor: \" rgba(255, 206, 69,1)\",\n    marginTop: 10,\n    width: 255,\n    height: 44,\n    padding: 13,\n    marginBottom: 20\n  },\n  divider: {\n    height: \"60%\"\n  },\n  lower: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    alignContent: \"flex-end\",\n    justifyContent: \"space-around\"\n  },\n  lower__text: {\n    fontSize: 12,\n    color: \"rgba(82, 101, 129, 1)\"\n  }\n});\nexport default Login_page;","map":{"version":3,"names":["React","useState","_Button","Background_Image","Login_page","email","setEmail","password","setPassword","styles","image","container","divider","text","Linking","openURL","input","alert","lower","lower__text","StyleSheet","create","alignItems","width","flex","color","fontSize","lineHeight","backgroundColor","marginTop","height","padding","marginBottom","flexDirection","alignContent","justifyContent"],"sources":["C:/Users/royst/Desktop/library-mobile/containers/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ImageBackground,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  Linking,\r\n} from \"react-native\";\r\n\r\nimport _Button from \"../app/components/Button\";\r\nimport Background_Image from \"../assets/login_page/background.png\";\r\n\r\nconst Login_page = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <ImageBackground\r\n        source={Background_Image}\r\n        resizeMode=\"cover\"\r\n        style={styles.image}\r\n      >\r\n        <View style={styles.container}>\r\n          <View style={styles.divider}></View>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => {\r\n              Linking.openURL(\"http://google.com\");\r\n            }}\r\n          >\r\n            Register?\r\n          </Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            placeholderTextColor={\"white\"}\r\n            onChangeText={setEmail}\r\n          ></TextInput>\r\n          <TextInput\r\n            style={styles.input}\r\n            secureTextEntry={true}\r\n            value={password}\r\n            placeholder=\"Enter your password\"\r\n            placeholderTextColor={\"white\"}\r\n            onChangeText={setPassword}\r\n          ></TextInput>\r\n          <Text>{email}</Text>\r\n          <_Button\r\n            buttonText=\"sign in\"\r\n            func={() => {\r\n              if (email === \"\") {\r\n                alert(\"email is empty\");\r\n              }\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.lower}>\r\n          <Text\r\n            style={styles.lower__text}\r\n            onPress={() => {\r\n              Linking.openURL(\"http://google.com\");\r\n            }}\r\n          >\r\n            Forgot password\r\n          </Text>\r\n          <Text\r\n            style={styles.lower__text}\r\n            onPress={() => {\r\n              alert(\"You tapped the button!\");\r\n            }}\r\n          >\r\n            Continue as guest\r\n          </Text>\r\n        </View>\r\n      </ImageBackground>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"flex-end\",\r\n    width: 255,\r\n  },\r\n  image: {\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n  },\r\n  text: {\r\n    color: \"black\",\r\n\r\n    fontSize: 20,\r\n    lineHeight: 25,\r\n  },\r\n  input: {\r\n    backgroundColor: \" rgba(255, 206, 69,1)\",\r\n    marginTop: 10,\r\n    width: 255,\r\n    height: 44,\r\n    padding: 13,\r\n    marginBottom: 20,\r\n  },\r\n  divider: {\r\n    height: \"60%\",\r\n  },\r\n  lower: {\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    alignContent: \"flex-end\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  lower__text: {\r\n    fontSize: 12,\r\n    color: \"rgba(82, 101, 129, 1)\",\r\n  },\r\n});\r\n\r\nexport default Login_page;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
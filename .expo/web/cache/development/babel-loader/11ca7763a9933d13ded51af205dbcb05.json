{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Chip } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar filterList = [\"Political\", \"Technology\", \"Fiction\", \"Psychology\"];\nvar FONT_SIZE = 22;\n\nvar ChipButtons = function ChipButtons(_ref) {\n  var select = _ref.select,\n      onChange = _ref.onChange;\n\n  var _React$useState = React.useState(\"Political\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      category = _React$useState2[0],\n      setCategory = _React$useState2[1];\n\n  function selChange(sel) {}\n\n  return _jsx(View, {\n    style: styles.row,\n    children: filterList.map(function (item) {\n      return _jsx(Chip, {\n        mode: \"outlined\",\n        onPress: function onPress() {\n          onChange(item);\n          setCategory(item);\n        },\n        style: category == item ? styles.chipActive : styles.chip,\n        textStyle: {\n          fontSize: FONT_SIZE\n        },\n        children: item\n      }, item);\n    })\n  });\n};\n\nexport default ChipButtons;\nvar styles = StyleSheet.create({\n  chip: {\n    width: 160,\n    marginLeft: 5,\n    marginBottom: 5,\n    justifyContent: \"center\",\n    textAlign: \"center\"\n  },\n  chipActive: {\n    width: 160,\n    marginLeft: 5,\n    marginBottom: 5,\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    textcolor: \"white\",\n    backgroundColor: \"#CBCBCB\"\n  },\n  row: {\n    marginTop: 2,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    paddingHorizontal: 12\n  }\n});","map":{"version":3,"names":["React","Chip","filterList","FONT_SIZE","ChipButtons","select","onChange","useState","category","setCategory","selChange","sel","styles","row","map","item","chipActive","chip","fontSize","StyleSheet","create","width","marginLeft","marginBottom","justifyContent","textAlign","textcolor","backgroundColor","marginTop","flexDirection","flexWrap","paddingHorizontal"],"sources":["C:/Users/Ming Sheng/Documents/GitHub/library-mobile/app/components/Chip.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, Alert } from \"react-native\";\r\nimport { Chip } from \"react-native-paper\";\r\n\r\nconst filterList = [\"Political\", \"Technology\", \"Fiction\", \"Psychology\"];\r\nconst FONT_SIZE = 22;\r\n\r\nconst ChipButtons = ({ select, onChange }) => {\r\n  const [category, setCategory] = React.useState(\"Political\");\r\n\r\n  function selChange(sel) {\r\n    /*console.log(sel);*/\r\n    /*const newSel = e.target.key;\r\n    console.log(newSel);\r\n    setCategory(newSel.toLowerCase());*/\r\n  }\r\n\r\n  return (\r\n    <View style={styles.row}>\r\n      {filterList.map((item) => (\r\n        <Chip\r\n          key={item}\r\n          mode=\"outlined\"\r\n          onPress={() => {\r\n            onChange(item);\r\n            setCategory(item);\r\n          }}\r\n          style={category == item ? styles.chipActive : styles.chip}\r\n          textStyle={{ fontSize: FONT_SIZE }}\r\n        >\r\n          {item}\r\n        </Chip>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ChipButtons;\r\n\r\nconst styles = StyleSheet.create({\r\n  chip: {\r\n    width: 160,\r\n    marginLeft: 5,\r\n    marginBottom: 5,\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  chipActive: {\r\n    width: 160,\r\n    marginLeft: 5,\r\n    marginBottom: 5,\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    textcolor: \"white\",\r\n    backgroundColor: \"#CBCBCB\",\r\n  },\r\n  row: {\r\n    marginTop: 2,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    paddingHorizontal: 12,\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,IAAMC,UAAU,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,SAA5B,EAAuC,YAAvC,CAAnB;AACA,IAAMC,SAAS,GAAG,EAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA0B;EAAA,IAAvBC,MAAuB,QAAvBA,MAAuB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAC5C,sBAAgCN,KAAK,CAACO,QAAN,CAAe,WAAf,CAAhC;EAAA;EAAA,IAAOC,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB,CAKvB;;EAED,OACE,KAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,GAApB;IAAA,UACGX,UAAU,CAACY,GAAX,CAAe,UAACC,IAAD;MAAA,OACd,KAAC,IAAD;QAEE,IAAI,EAAC,UAFP;QAGE,OAAO,EAAE,mBAAM;UACbT,QAAQ,CAACS,IAAD,CAAR;UACAN,WAAW,CAACM,IAAD,CAAX;QACD,CANH;QAOE,KAAK,EAAEP,QAAQ,IAAIO,IAAZ,GAAmBH,MAAM,CAACI,UAA1B,GAAuCJ,MAAM,CAACK,IAPvD;QAQE,SAAS,EAAE;UAAEC,QAAQ,EAAEf;QAAZ,CARb;QAAA,UAUGY;MAVH,GACOA,IADP,CADc;IAAA,CAAf;EADH,EADF;AAkBD,CA5BD;;AA8BA,eAAeX,WAAf;AAEA,IAAMQ,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BH,IAAI,EAAE;IACJI,KAAK,EAAE,GADH;IAEJC,UAAU,EAAE,CAFR;IAGJC,YAAY,EAAE,CAHV;IAIJC,cAAc,EAAE,QAJZ;IAKJC,SAAS,EAAE;EALP,CADyB;EAQ/BT,UAAU,EAAE;IACVK,KAAK,EAAE,GADG;IAEVC,UAAU,EAAE,CAFF;IAGVC,YAAY,EAAE,CAHJ;IAIVC,cAAc,EAAE,QAJN;IAKVC,SAAS,EAAE,QALD;IAMVC,SAAS,EAAE,OAND;IAOVC,eAAe,EAAE;EAPP,CARmB;EAiB/Bd,GAAG,EAAE;IACHe,SAAS,EAAE,CADR;IAEHC,aAAa,EAAE,KAFZ;IAGHC,QAAQ,EAAE,MAHP;IAIHC,iBAAiB,EAAE;EAJhB;AAjB0B,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}
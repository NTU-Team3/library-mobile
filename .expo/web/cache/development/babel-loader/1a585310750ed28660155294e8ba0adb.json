{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport dataBook from \"../../data/fakeDataBook-ikoh\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function BookScreenSynopsis() {\n  var _useState = useState({\n    title: dataBook[1].title,\n    synopsis: dataBook[1].synopsis,\n    reviews: dataBook[1].reviews,\n    imgPath: dataBook[1].imgpath\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      book = _useState2[0],\n      setBook = _useState2[1];\n\n  var pressCart = function pressCart() {\n    Alert.alert(\"Cart\", \"To add '\" + book.title + \"' to cart.\", [{\n      text: \"Accept\",\n      onPress: function onPress() {\n        return console.log(\"Cart button closed.\");\n      }\n    }]);\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.txtDivPara,\n      children: [_jsx(Text, {\n        style: styles.txtPara,\n        children: book.synopsis\n      }), _jsx(TouchableOpacity, {\n        activeOpacity: 0.5,\n        onPress: pressCart,\n        children: _jsx(Text, {\n          style: styles.btnDiv,\n          children: \"add to cart\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  txtDivPara: {\n    paddingTop: \"10%\",\n    padding: \"9%\",\n    fontSize: 16,\n    backgroundColor: \"#222831\"\n  },\n  txtPara: {\n    lineHeight: 25,\n    color: \"#FFFFFF\",\n    textAlign: \"justify\"\n  },\n  btnDiv: {\n    alignSelf: \"flex-end\",\n    width: \"37%\",\n    marginTop: \"10%\",\n    marginBottom: \"5%\",\n    paddingVertical: \"3.25%\",\n    color: \"#222831\",\n    textAlign: \"center\",\n    borderBottomLeftRadius: 20,\n    backgroundColor: \"#FFF\"\n  }\n});","map":{"version":3,"names":["React","useState","dataBook","BookScreenSynopsis","title","synopsis","reviews","imgPath","imgpath","book","setBook","pressCart","Alert","alert","text","onPress","console","log","styles","txtDivPara","txtPara","btnDiv","StyleSheet","create","paddingTop","padding","fontSize","backgroundColor","lineHeight","color","textAlign","alignSelf","width","marginTop","marginBottom","paddingVertical","borderBottomLeftRadius"],"sources":["C:/Users/royst/Desktop/saifu/New folder (2)/library-mobile/app/containers/BookScreen/BookScreen-synopsis.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, TouchableOpacity, ScrollView, View, Text, Alert } from \"react-native\";\r\nimport dataBook from \"../../data/fakeDataBook-ikoh\";\r\n\r\nexport default function BookScreenSynopsis() {\r\n  // Set the below as a single obj instead?\r\n  const [book, setBook] = useState({\r\n    title: dataBook[1].title,\r\n    synopsis: dataBook[1].synopsis,\r\n    reviews: dataBook[1].reviews,\r\n    imgPath: dataBook[1].imgpath,\r\n  });\r\n\r\n  const pressCart = () => {\r\n    // setCart here\r\n    Alert.alert(\"Cart\", `To add '${book.title}' to cart.`, [{ text: \"Accept\", onPress: () => console.log(\"Cart button closed.\") }]);\r\n  };\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.txtDivPara}>\r\n        <Text style={styles.txtPara}>{book.synopsis}</Text>\r\n        <TouchableOpacity activeOpacity={0.5} onPress={pressCart}>\r\n          <Text style={styles.btnDiv}>add to cart</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  txtDivPara: {\r\n    paddingTop: \"10%\",\r\n    padding: \"9%\",\r\n    fontSize: 16,\r\n    backgroundColor: \"#222831\",\r\n  },\r\n\r\n  txtPara: {\r\n    lineHeight: 25,\r\n    color: \"#FFFFFF\",\r\n    textAlign: \"justify\",\r\n  },\r\n\r\n  btnDiv: {\r\n    alignSelf: \"flex-end\",\r\n    width: \"37%\",\r\n    marginTop: \"10%\",\r\n    marginBottom: \"5%\",\r\n    paddingVertical: \"3.25%\",\r\n    color: \"#222831\",\r\n    textAlign: \"center\",\r\n    borderBottomLeftRadius: 20,\r\n    backgroundColor: \"#FFF\",\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,OAAOC,QAAP;;;AAEA,eAAe,SAASC,kBAAT,GAA8B;EAE3C,gBAAwBF,QAAQ,CAAC;IAC/BG,KAAK,EAAEF,QAAQ,CAAC,CAAD,CAAR,CAAYE,KADY;IAE/BC,QAAQ,EAAEH,QAAQ,CAAC,CAAD,CAAR,CAAYG,QAFS;IAG/BC,OAAO,EAAEJ,QAAQ,CAAC,CAAD,CAAR,CAAYI,OAHU;IAI/BC,OAAO,EAAEL,QAAQ,CAAC,CAAD,CAAR,CAAYM;EAJU,CAAD,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IAEtBC,KAAK,CAACC,KAAN,CAAY,MAAZ,eAA+BJ,IAAI,CAACL,KAApC,iBAAuD,CAAC;MAAEU,IAAI,EAAE,QAAR;MAAkBC,OAAO,EAAE;QAAA,OAAMC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAN;MAAA;IAA3B,CAAD,CAAvD;EACD,CAHD;;EAKA,OACE,KAAC,UAAD;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC,UAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,OAApB;QAAA,UAA8BX,IAAI,CAACJ;MAAnC,EADF,EAEE,KAAC,gBAAD;QAAkB,aAAa,EAAE,GAAjC;QAAsC,OAAO,EAAEM,SAA/C;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAEO,MAAM,CAACG,MAApB;UAAA;QAAA;MADF,EAFF;IAAA;EADF,EADF;AAUD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BJ,UAAU,EAAE;IACVK,UAAU,EAAE,KADF;IAEVC,OAAO,EAAE,IAFC;IAGVC,QAAQ,EAAE,EAHA;IAIVC,eAAe,EAAE;EAJP,CADmB;EAQ/BP,OAAO,EAAE;IACPQ,UAAU,EAAE,EADL;IAEPC,KAAK,EAAE,SAFA;IAGPC,SAAS,EAAE;EAHJ,CARsB;EAc/BT,MAAM,EAAE;IACNU,SAAS,EAAE,UADL;IAENC,KAAK,EAAE,KAFD;IAGNC,SAAS,EAAE,KAHL;IAINC,YAAY,EAAE,IAJR;IAKNC,eAAe,EAAE,OALX;IAMNN,KAAK,EAAE,SAND;IAONC,SAAS,EAAE,QAPL;IAQNM,sBAAsB,EAAE,EARlB;IASNT,eAAe,EAAE;EATX;AAduB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}